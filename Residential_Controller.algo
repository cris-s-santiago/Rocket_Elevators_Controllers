=============== Residential controller ======================== 

  *Objects that need to be controlled:

      1. Column (one)
      2. Elevators (2) (10 Floors)
      3. Call buttons
      4. Doors
      5. Floor request buttons  

===============================================================



'=============================================================== Column ==============================================================='

DEFINE Column USING identify AND amountOfFloor AND amountOfElev       
    
  ID: identify    
  NumberOfFloor: amountOfFloor    
  Status: active
  ElevatorList: empty list

    'Calling the functions that created ElevatorList and CallButtonList'
    CALL createElevator WITH amountOfElev
    'Using a FOR(Loop) to create ElevatorList'
    SEQUENCE createElevator USING amountOfElev

        SET counter TO 1                                                                    
        For amountOfElev                                                   
          SET elevator TO INSTANTIATE Elevator with counter
          ADD elevator TO ElevatorList
          INCREMENT counter
        ENDFOR

    ENDSEQUENCE

    SEQUENCE requestElevator USING requestFloorExt AND requestDirectionExt
      CALL findBestElevator WITH requestFloorExt AND requestDirectionExt RETURNING bestElevatorFound
      CALL bestElevatorFound movElev WITH requestFloorExt AND requestDirectionExt
    ENDSEQUENCE

    SEQUENCE findBestElevator USING requestFloorExt AND requestDirectionExt
      SET bestElevator TO NULL
      SET ElevatorAvailableList TO NULL

      'Select just the available elevators'
      FOR EACH elevator OF THIS ElevatorList
        IF elevator Status EQUAL idle 
          ADD elevator TO ElevatorAvailableList
        ENDIF

        'Compare each pair of elevators in the ElevatorList to find the nearst'
        FOR SET x = 1 TO ElevatorAvailableList
          IF ElevatorAvailableList LENGTH MORE THAN 1
            IF bestElevator IS NOT NULL
              SET firstPairElement TO bestElevator
            ELSE
              SET firstPairElement GET element x OF ElevatorAvailableList
            ENDIF

            SET secondPairElement GET element x + 1 OF ElevatorAvailableList
            
            'Calculation of the distance for the requested floor' 
            SET distFirstPairElement TO ABSOLUTE (firstPairElement CurrentFloor - requestFloorExt)
            SET distSecondPairElement TO ABSOLUTE (secondPairElement CurrentFloor - requestFloorExt)

            'Set the first element if nearst, othewise set second element'
            IF distFirstPairElement < distSecondPairElement
              SET bestElevator TO firstPairELement
            ELSE
              SET bestElevator TO secondPairElement
            ENDIF
          ELSE
            SET bestElevator GET element x OF ElevatorAvailableList
          ENDIF
        ENDFOR

      ENDFOR
      RETURN bestElevator

    ENDSEQUENCE 

ENDDEFINE



'=============================================================== Elevator ==============================================================='

DEFINE Elevator USING identify                    
    ID: identify        
    Status: idle                               
    Direction: NULL   // useless at this time                            
    CurrentFloor: 1
    ElevFloorDestination: NULL                                  
    Doors: INSTANTIATE OF Doors

    SEQUENCE movElev USING requestFloor AND requestDirection

      SET this Direction TO requestDirection AND this Status TO moving AND this ElevFloorDestination TO requestFloor
      WHILE this CurrentFloor IS NOT EQUAL this ElevFloorDestination 
        IF Direction EQUAL up
          CurrentFloor INCREMENT 1
        ENDIF
        IF Direction EQUAL down
          CurrentFloor INCREMENT -1 'To do'
        ENDIF
      ENDWHILE

      CALL operateDoors WITH opened
      SET this Status TO idle

    ENDSEQUENCE

    SEQUENCE operateDoors USING command
        SET this Doors Status TO command
    ENDSEQUENCE

    SEQUENCE ElevRequestButtons USING requestFloorInt
      CALL operateDoors WITH closed
      IF requestFloorInt > CurrentFloor
        SET elevDirection TO up
      ELSE IF requestFloorInt < CurrentFloor
        SET elevDirection TO down
      ENDIF

      CALL movElev WITH requestFloorInt AND elevDirection
    ENDSEQUENCE 
    
ENDDEFINE



'=============================================================== CallButtons ==============================================================='

DEFINE CallButtons
  SET floor
  SET direction
ENDDEFINE



'=============================================================== Doors ==============================================================='

DEFINE Doors
  Status: closed // opened or closed                               
ENDDEFINE



'=============================================================== FloorRequestButtons ==============================================================='

DEFINE FloorRequestButtons
  ElevButtonList: empty list
ENDDEFINE



===============================================================   TEST   ===============================================================

*Residential Scenarios:

SET Column1 to INSTANTIATE Column WITH 1 AND 10 AND 2

  -Scenario 1:  
    CALL requestElevator WITH 3, Up      ELEVATOR A IDLE FLOOR 2  || ELEVATOR B IDLE Floor 6
    CALL ElevRequestButtons WITH 7

  -Scenario 2:
    CALL requestElevator WITH 1, Up
    CALL ElevRequestButtons WITH 6

    CALL requestElevator WITH 3, Up
    CALL ElevRequestButtons WITH 5

    CALL requestElevator WITH 9, Down
    CALL ElevRequestButtons WITH 2

  -Scenario 2:
    CALL requestElevator WITH 3, Down         ELEVATOR A IDLE F10 ||
    CALL ElevRequestButtons WITH 2

    CALL requestElevator WITH 10, Down
    CALL ElevRequestButtons WITH 3

===============================================================  ENDTEST  ===============================================================

